# queryに関する処理を記述

# フラグメント名        フラグメントを適用するデータ型
fragment WorkFragment on Work {
  # 取得するフィールド
  id
  title
  summary
  image_url
  duration
  number_of_people
  language
  role
  url
  brief_story
  created_at
  updated_at
  number_of_work
  is_delete
}

query GetWork($id: ID!) {
  work(id: $id){
    ...WorkFragment
    user{
      id
      name
    }
  }
}

query GetWorks($limit: Int!, $order: String! ,$searched:  String!, $num: Int!) {
  works(limit: $limit, order: $order, searched: $searched, num: $num){
    pageInfo{
      page,
      paginationLength,
      hasPreviousPage,
      hasNextPage,
      count,
      totalCount
    },
    nodes{
    ...WorkFragment
      user{
        id
        name
      }
    }
  }
}

query GetWorkNodes($limit: Int!, $order:String! ,$searched: String!, $num: Int!) {
  workNodes(limit: $limit, order: $order, searched: $searched, num: $num) {
    ...WorkFragment
    user {
      id
      name
    }
  }
}

mutation CreateWork($input: CreateWorkInput!) {
  createWork(input: $input)
}

mutation UpdateWork($input: UpdateWorkInput!) {
  updateWork(input: $input)
}

mutation DeleteWorks($ids: [ID]!) {
  deleteWorks(ids: $ids)
}
