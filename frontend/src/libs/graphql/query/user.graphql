# schema.graphqlsのQueryの内容に従って定義

# フラグメント名        フラグメントを適用するデータ型
fragment UserFragment on User {
  id
  name
  email
  created_at
  updated_at
  serial_number
}

query GetUser($id: ID!) {
  user(id: $id) {
    ...UserFragment
    works {
      pageInfo {
        ...PaginationFragment
      }
      nodes {
        ...WorkFragment
      }
    }
  }
}

query GetUserAuth($id: ID!) {
  userAuth(id: $id) {
    ...UserFragment
    works {
      pageInfo {
        ...PaginationFragment
      }
      nodes {
        ...WorkFragment
      }
    }
  }
}

query GetUsers($limit: Int!, $offset: Int) {
  users(limit: $limit, offset: $offset) {
    pageInfo {
      ...PaginationFragment
    }
    nodes {
      ...UserFragment
      works {
        nodes {
          ...WorkFragment
          user {
            ...UserFragment
          }
        }
      }
    }
  }
}

query GetUsersName($limit: Int!, $offset: Int) {
  users(limit: $limit, offset: $offset) {
    pageInfo {
      ...PaginationFragment
    }
    nodes {
      ...UserFragment
    }
  }
}

query GetUserIds($limit: Int!, $offset: Int) {
  users(limit: $limit, offset: $offset) {
    nodes{
      id
    }
  }
}

mutation Login($id: String!, $email: String!) {
  login(id: $id, email: $email)
}
